/**
  @page COMP_CompareGpioVsDacInt_OutputGpio COMP example
  
  @verbatim
  ******************************************************************************
  * @file    Examples/COMP/COMP_CompareGpioVsDacInt_OutputGpio/readme.txt
  * @author  MCD Application Team
  * @brief   Description of the COMP_CompareGpioVsDacInt_OutputGpio Example.
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2019 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  @endverbatim

@par Example Description 

This example shows how to configure the COMP peripheral to compare the external
voltage applied on a specific pin with a sawtooth signal generated by a DAC. 

In this example, the comparator input is connected on the pin PA1 (pin 30 on connector CN7) the user shall apply a voltage on it.
The DAC output is connected internally to comparator other input, and externally to the pin PA4 (pin 32 on connector CN7).
The comparator output is connected to the pin PA0 (pin 28 on connector CN7).

LED2 state:
  - "ON" when comparator output is high.
  - "OFF" when comparator output is low.
  - toggling twice at a frequency of 1Hz when an error occurred.

User can probe this 3 signals:
1 - Comparator INP: PA1 (pin 30 on connector CN7)
2 - Comparator INM: PA4 (pin 32 on connector CN7)
3 - Comparator OUT: PA0 (pin 28 on connector CN7)
To observe that when INP is above INM, OUT is high. Otherwise, OUT is low.

@note Care must be taken when using HAL_Delay(), this function provides 
      accurate delay (in milliseconds) based on variable incremented in SysTick ISR. 
      This implies that if HAL_Delay() is called from a peripheral ISR process, then 
      the SysTick interrupt must have higher priority (numerically lower) than the 
      peripheral interrupt. Otherwise the caller ISR process will be blocked. 
      To change the SysTick interrupt priority you have to use HAL_NVIC_SetPriority() function.
      
@note The application need to ensure that the SysTick time base is always set 
      to 1 millisecond to have correct HAL operation.

@par Keywords

comparator, Inverter Input, voltage compare

@par Directory contents 

  - COMP/COMP_CompareGpioVsDacInt_OutputGpio/Inc/stm32g4xx_nucleo_conf.h     BSP configuration file
  - COMP/COMP_CompareGpioVsDacInt_OutputGpio/Inc/stm32g4xx_hal_conf.h    HAL configuration file
  - COMP/COMP_CompareGpioVsDacInt_OutputGpio/Inc/stm32g4xx_it.h          COMP interrupt handlers header file
  - COMP/COMP_CompareGpioVsDacInt_OutputGpio/Inc/main.h                  Header for main.c module
  - COMP/COMP_CompareGpioVsDacInt_OutputGpio/Src/stm32g4xx_it.c          COMP interrupt handlers
  - COMP/COMP_CompareGpioVsDacInt_OutputGpio/Src/main.c                  Main program
  - COMP/COMP_CompareGpioVsDacInt_OutputGpio/Src/stm32g4xx_hal_msp.c     HAL MSP file 
  - COMP/COMP_CompareGpioVsDacInt_OutputGpio/Src/system_stm32g4xx.c      STM32G4xx system source file


@par Hardware and Software environment 

  - This example runs on STM32G474xx devices.

  - This example has been tested with NUCLEO-G474RE RevC board and can be
    easily tailored to any other supported device and development board.

  - Apply an external variable voltage on PA1 (connected on pin 30 on CN7 or pin A1 Arduino Connector CN8) make it vary from 0 to 3.3V.


    
@par How to use it ? 

In order to make the program work, you must do the following :
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example

 */